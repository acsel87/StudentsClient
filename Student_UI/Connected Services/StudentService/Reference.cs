//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Student_UI.StudentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GradeModel", Namespace="http://schemas.datacontract.org/2004/07/Student.Models")]
    [System.SerializableAttribute()]
    public partial class GradeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GradeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GradeDate {
            get {
                return this.GradeDateField;
            }
            set {
                if ((this.GradeDateField.Equals(value) != true)) {
                    this.GradeDateField = value;
                    this.RaisePropertyChanged("GradeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GradeID {
            get {
                return this.GradeIDField;
            }
            set {
                if ((this.GradeIDField.Equals(value) != true)) {
                    this.GradeIDField = value;
                    this.RaisePropertyChanged("GradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GradeNotes {
            get {
                return this.GradeNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeNotesField, value) != true)) {
                    this.GradeNotesField = value;
                    this.RaisePropertyChanged("GradeNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentService.IStudentService")]
    public interface IStudentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/CheckConnection", ReplyAction="http://tempuri.org/IStudentService/CheckConnectionResponse")]
        string CheckConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/CheckConnection", ReplyAction="http://tempuri.org/IStudentService/CheckConnectionResponse")]
        System.Threading.Tasks.Task<string> CheckConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetAccountTypes", ReplyAction="http://tempuri.org/IStudentService/GetAccountTypesResponse")]
        string GetAccountTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetAccountTypes", ReplyAction="http://tempuri.org/IStudentService/GetAccountTypesResponse")]
        System.Threading.Tasks.Task<string> GetAccountTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/SignUp", ReplyAction="http://tempuri.org/IStudentService/SignUpResponse")]
        string SignUp(string username, string password, int accountTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/SignUp", ReplyAction="http://tempuri.org/IStudentService/SignUpResponse")]
        System.Threading.Tasks.Task<string> SignUpAsync(string username, string password, int accountTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/Login", ReplyAction="http://tempuri.org/IStudentService/LoginResponse")]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/Login", ReplyAction="http://tempuri.org/IStudentService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ResetPassword", ReplyAction="http://tempuri.org/IStudentService/ResetPasswordResponse")]
        string ResetPassword(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ResetPassword", ReplyAction="http://tempuri.org/IStudentService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<string> ResetPasswordAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ActivateLink", ReplyAction="http://tempuri.org/IStudentService/ActivateLinkResponse")]
        string ActivateLink(string username, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ActivateLink", ReplyAction="http://tempuri.org/IStudentService/ActivateLinkResponse")]
        System.Threading.Tasks.Task<string> ActivateLinkAsync(string username, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ConfirmReset", ReplyAction="http://tempuri.org/IStudentService/ConfirmResetResponse")]
        string ConfirmReset(string userToken, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ConfirmReset", ReplyAction="http://tempuri.org/IStudentService/ConfirmResetResponse")]
        System.Threading.Tasks.Task<string> ConfirmResetAsync(string userToken, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetStudents", ReplyAction="http://tempuri.org/IStudentService/GetStudentsResponse")]
        string GetStudents(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetStudents", ReplyAction="http://tempuri.org/IStudentService/GetStudentsResponse")]
        System.Threading.Tasks.Task<string> GetStudentsAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetTeachers", ReplyAction="http://tempuri.org/IStudentService/GetTeachersResponse")]
        string GetTeachers(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetTeachers", ReplyAction="http://tempuri.org/IStudentService/GetTeachersResponse")]
        System.Threading.Tasks.Task<string> GetTeachersAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetGrades", ReplyAction="http://tempuri.org/IStudentService/GetGradesResponse")]
        string GetGrades(int studentID, int teacherID, string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetGrades", ReplyAction="http://tempuri.org/IStudentService/GetGradesResponse")]
        System.Threading.Tasks.Task<string> GetGradesAsync(int studentID, int teacherID, string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetStudentRating", ReplyAction="http://tempuri.org/IStudentService/GetStudentRatingResponse")]
        string GetStudentRating(int studentID, int teacherID, string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetStudentRating", ReplyAction="http://tempuri.org/IStudentService/GetStudentRatingResponse")]
        System.Threading.Tasks.Task<string> GetStudentRatingAsync(int studentID, int teacherID, string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/RateTeacher", ReplyAction="http://tempuri.org/IStudentService/RateTeacherResponse")]
        string RateTeacher(int teacherID, int rate, string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/RateTeacher", ReplyAction="http://tempuri.org/IStudentService/RateTeacherResponse")]
        System.Threading.Tasks.Task<string> RateTeacherAsync(int teacherID, int rate, string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ModifyGrades", ReplyAction="http://tempuri.org/IStudentService/ModifyGradesResponse")]
        string ModifyGrades(bool isNewGrade, Student_UI.StudentService.GradeModel gradeModel, string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/ModifyGrades", ReplyAction="http://tempuri.org/IStudentService/ModifyGradesResponse")]
        System.Threading.Tasks.Task<string> ModifyGradesAsync(bool isNewGrade, Student_UI.StudentService.GradeModel gradeModel, string accessToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentServiceChannel : Student_UI.StudentService.IStudentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentServiceClient : System.ServiceModel.ClientBase<Student_UI.StudentService.IStudentService>, Student_UI.StudentService.IStudentService {
        
        public StudentServiceClient() {
        }
        
        public StudentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CheckConnection() {
            return base.Channel.CheckConnection();
        }
        
        public System.Threading.Tasks.Task<string> CheckConnectionAsync() {
            return base.Channel.CheckConnectionAsync();
        }
        
        public string GetAccountTypes() {
            return base.Channel.GetAccountTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetAccountTypesAsync() {
            return base.Channel.GetAccountTypesAsync();
        }
        
        public string SignUp(string username, string password, int accountTypeID) {
            return base.Channel.SignUp(username, password, accountTypeID);
        }
        
        public System.Threading.Tasks.Task<string> SignUpAsync(string username, string password, int accountTypeID) {
            return base.Channel.SignUpAsync(username, password, accountTypeID);
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public string ResetPassword(string username) {
            return base.Channel.ResetPassword(username);
        }
        
        public System.Threading.Tasks.Task<string> ResetPasswordAsync(string username) {
            return base.Channel.ResetPasswordAsync(username);
        }
        
        public string ActivateLink(string username, string token) {
            return base.Channel.ActivateLink(username, token);
        }
        
        public System.Threading.Tasks.Task<string> ActivateLinkAsync(string username, string token) {
            return base.Channel.ActivateLinkAsync(username, token);
        }
        
        public string ConfirmReset(string userToken, string newPassword) {
            return base.Channel.ConfirmReset(userToken, newPassword);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmResetAsync(string userToken, string newPassword) {
            return base.Channel.ConfirmResetAsync(userToken, newPassword);
        }
        
        public string GetStudents(string accessToken) {
            return base.Channel.GetStudents(accessToken);
        }
        
        public System.Threading.Tasks.Task<string> GetStudentsAsync(string accessToken) {
            return base.Channel.GetStudentsAsync(accessToken);
        }
        
        public string GetTeachers(string accessToken) {
            return base.Channel.GetTeachers(accessToken);
        }
        
        public System.Threading.Tasks.Task<string> GetTeachersAsync(string accessToken) {
            return base.Channel.GetTeachersAsync(accessToken);
        }
        
        public string GetGrades(int studentID, int teacherID, string accessToken) {
            return base.Channel.GetGrades(studentID, teacherID, accessToken);
        }
        
        public System.Threading.Tasks.Task<string> GetGradesAsync(int studentID, int teacherID, string accessToken) {
            return base.Channel.GetGradesAsync(studentID, teacherID, accessToken);
        }
        
        public string GetStudentRating(int studentID, int teacherID, string accessToken) {
            return base.Channel.GetStudentRating(studentID, teacherID, accessToken);
        }
        
        public System.Threading.Tasks.Task<string> GetStudentRatingAsync(int studentID, int teacherID, string accessToken) {
            return base.Channel.GetStudentRatingAsync(studentID, teacherID, accessToken);
        }
        
        public string RateTeacher(int teacherID, int rate, string accessToken) {
            return base.Channel.RateTeacher(teacherID, rate, accessToken);
        }
        
        public System.Threading.Tasks.Task<string> RateTeacherAsync(int teacherID, int rate, string accessToken) {
            return base.Channel.RateTeacherAsync(teacherID, rate, accessToken);
        }
        
        public string ModifyGrades(bool isNewGrade, Student_UI.StudentService.GradeModel gradeModel, string accessToken) {
            return base.Channel.ModifyGrades(isNewGrade, gradeModel, accessToken);
        }
        
        public System.Threading.Tasks.Task<string> ModifyGradesAsync(bool isNewGrade, Student_UI.StudentService.GradeModel gradeModel, string accessToken) {
            return base.Channel.ModifyGradesAsync(isNewGrade, gradeModel, accessToken);
        }
    }
}
